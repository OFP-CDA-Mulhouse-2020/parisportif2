@startuml parisportif

class User {
    - id
    - login
    - password
    - email
    ' - typeOfMoney
    ' - linkToAvatar
    - userActivity
    - userChecked

    - dateCreationAccount

    
    + createUser()
    + editUser()
    + deleteUser()
    + bet()
    + addFavorite()
    + removeFavorite()
}

class Identity {
    - id
    - userId
    - gender
    - lastName
    - firstName
    - birthDate
    - phoneNumber

    - linkToOfficialId

    ' - typeOfMoney

    + createIdentity()
    + editIdentity()
    + deleteIdentity()
    + proofUpper18()
}

class Address {
    - id
    - userId
    - streetNb
    - street
    - zipCode
    - city
    - country

    - linkToOfficialAdress 

    + createAddress()
    + editAddress()
    + deleteAddress()
}

class Wallet {
    - id
    - userId
    - balance
    - Limit

    + getHistoryOfMovement()
    + addMoney()
    + withdrawMoney()
}

class Favorite {
    - id
    - userId

    + addFavorite()
    + removeFavorite()
}

class Basket {
    - id
    - userId
    - amount
    - listOfBet
    - totalBasket

    + addBetToBasket()
    + editBetToBasket()
    + removeBetToBasket()
    + validate()
}

class Bet {
    - id
    - name
    - dateBet
    - orderFinishTime
    - odds
    - result
    - eventId
    - participantId
    - team_or_playersolo

    + createBet()
    + editBet()
    + deleteBet()
    + getResultofBet()
    + setBonusToParticipantId()
}

' class CombinedBet{
'     - id
'     - name
'     - totalOdds

'     + createCombinedBet()
'     + editCombinedBet()
'     + deleteCombinedBet()
' }

class BankAccount {
    - id
    - userId
    - ibanCode
    - bicCode
    - bankCode

    + createBankAccount
    + editBankAccount
    + deleteBankAccount
    + checkBankAccount
}

class CreditCard {
    - id
    - cardHolder
    - cardNumber
    - expiryDate
    - cryptogram

    + addCreditCard
    + editCreditCard
    + deleteCreditCard
    + checkCreditCard
}

class Account {
    - id

}


class Event {
    - name
    - categorie
    - location
    - dateEvent
    - dateTimeZone
    - nbContestant

    + createEvent()
    + editEvent()
    + deleteEvent()
}

class Event_Participant {
    - eventId
    - participantId
    - team_or_playersolo
    - bonus_malus

    + createEvent_Participant()
    + editEvent_Participant()
    + deleteEvent_Participant()
}

class Team {
    - name
    - categorie
    - nbPlayer
    - ranking

    + createTeam()
    + editTeam()
    + deleteTeam()
    + calculateTeamRanking()
}

class Player {
    - lastName
    - firstName
    - status
    - ranking

    + createPlayer()
    + editPlayer()
    + deletePlayer()
    + calculatePlayerRanking()
}

class PlayerRanking {
    - playerId
    - age
    - healthRate
    - offensiveRate
    - defensiveRate

    + createPlayerRanking()
    + editPlayerRanking()
    + deletePlayerRanking()
}

class Status {
    - playerId
    - name

    + createStatus()
    + editStatus()
    + deleteStatus()
}

class Team_Player {
    - teamId
    - playerId
}

class Competition {
    - name
    - StartDate
    - FinishDate

    + createCompetition()
    + addEvent()
    + removeEvent()
    + deleteCompetition()
}

User "1" *-- "1" Address
User "1" *-- "1" Identity
User "1" *-- "1" Wallet
User "1" *-- "1..*" Basket
User "1" *-- "1" BankAccount
User "1" *-- "1" CreditCard

Basket "1..*" -up- "1..*" Bet
' Basket "1..*" -up- "1..*" CombinedBet
' Bet "1..*" -right- "1..*" CombinedBet

Event "1" *-up- "1.." Bet
Event "1..*" -up-* "1" Competition

Event "1..*" o-- "1..*" Team
(Event, Team) .. Event_Participant
Event "1..*" o-- "1..*" Player
(Event, Player) .left. Event_Participant

Player "1..*" o-left- "1..*" Team
Player "1..*" o-right- "1..*" PlayerRanking
Player "1" o-right- "1..*" Status


@enduml

